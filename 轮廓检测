#-*_ coding:utf-8 -*-
import cv2
import numpy as np
'''
        created on Tues jan 08:28:51 2018
        @author: ren_dong
        
        contour detection
        cv2.findContours()    寻找轮廓
        cv2.drawContours()    绘制轮廓
'''
#加载图像img
img = cv2.imread('1.jpg')
cv2.imshow('origin', img)
'''
灰度化处理,注意必须调用cv2.cvtColor(),
如果直接使用cv2.imread('1.jpg',0),会提示图像深度不对,不符合cv2.CV_8U
'''
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
cv2.imshow('gray', gray)
 
#调用cv2.threshold()进行简单阈值化,由灰度图像得到二值化图像
#  输入图像必须为单通道8位或32位浮点型
ret, thresh = cv2.threshold(gray, 127, 255, 0)
cv2.imshow('thresh', thresh)
 
#调用cv2.findContours()寻找轮廓,返回修改后的图像,轮廓以及他们的层次
image, contours, hierarchy = cv2.findContours(thresh, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
cv2.imshow('image', image)
 
 
print('contours[0]:',contours[0])
print('len(contours):',len(contours))
print('hierarchy.shape:',hierarchy.shape)
print('hierarchy:',hierarchy)
 
#调用cv2.drawContours()在原图上绘制轮廓
img = cv2.drawContours(img, contours, -1, (0, 255, 0), 2)
cv2.imshow('contours', img)
 
 
 
cv2.waitKey()
cv2.destroyAllWindows()


cv2.findContours(image, mode, method[, contours[, hierarchy[, offset ]]])  
参数
第一个参数是寻找轮廓的图像；

第二个参数表示轮廓的检索模式，有四种（本文介绍的都是新的cv2接口）：
    cv2.RETR_EXTERNAL表示只检测外轮廓
    cv2.RETR_LIST检测的轮廓不建立等级关系
    cv2.RETR_CCOMP建立两个等级的轮廓，上面的一层为外边界，里面的一层为内孔的边界信息。如果内孔内还有一个连通物体，这个物体的边界也在顶层。
    cv2.RETR_TREE建立一个等级树结构的轮廓。

第三个参数method为轮廓的近似办法
    cv2.CHAIN_APPROX_NONE存储所有的轮廓点，相邻的两个点的像素位置差不超过1，即max（abs（x1-x2），abs（y2-y1））==1
    cv2.CHAIN_APPROX_SIMPLE压缩水平方向，垂直方向，对角线方向的元素，只保留该方向的终点坐标，例如一个矩形轮廓只需4个点来保存轮廓信息
    cv2.CHAIN_APPROX_TC89_L1，CV_CHAIN_APPROX_TC89_KCOS使用teh-Chinl chain 近似算法

返回值
cv2.findContours()函数返回两个值，一个是轮廓本身，还有一个是每条轮廓对应的属性。



cv2.threshold(src, thresh, maxval, type[, dst]) → retval, dst
src：表示的是图片源
thresh：表示的是阈值（起始值）
maxval：表示的是最大值
type：表示的是这里划分的时候使用的是什么类型的算法，常用值为0（cv2.THRESH_BINARY）
